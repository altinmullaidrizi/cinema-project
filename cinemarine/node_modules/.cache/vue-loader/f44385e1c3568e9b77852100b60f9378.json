{"remainingRequest":"/Users/altin/WebstormProjects/Cinema/cinemarine/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/altin/WebstormProjects/Cinema/cinemarine/src/views/admin/Messages.vue?vue&type=style&index=0&id=0efbaa74&scoped=true&lang=css&","dependencies":[{"path":"/Users/altin/WebstormProjects/Cinema/cinemarine/src/views/admin/Messages.vue","mtime":1615842413712},{"path":"/Users/altin/WebstormProjects/Cinema/cinemarine/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/altin/WebstormProjects/Cinema/cinemarine/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/altin/WebstormProjects/Cinema/cinemarine/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/altin/WebstormProjects/Cinema/cinemarine/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/altin/WebstormProjects/Cinema/cinemarine/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/altin/WebstormProjects/Cinema/cinemarine/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudi1pY29uOmhvdmVyIHsKICBjb2xvcjogYmx1ZTsKfQo="},{"version":3,"sources":["Messages.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA","file":"Messages.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div>\n    <div v-if=\"isLoading\">Loading</div>\n    <v-btn\n      color=\"lightred\"\n      class=\"mt-4 mb-4 center text-white\"\n      @click=\"refresh()\"\n      >Refresh</v-btn\n    >\n    <v-data-table :headers=\"headers\" :items=\"messages\" i>\n      <template v-slot:top> </template>\n\n      <template v-slot:item.action=\"{ item }\">\n        <v-icon small class=\"mr-3\">fas fa-eye</v-icon>\n\n        <a @click=\"showDeleteModal(item)\">\n          <v-icon small class=\"mr-3 ms-icon\">fas fa-trash</v-icon>\n        </a>\n      </template>\n    </v-data-table>\n    <b-modal\n      v-model=\"showConfirmation\"\n      size=\"sm\"\n      :hide-header=\"true\"\n      :hide-footer=\"true\"\n    >\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <div class=\"text-center\">Konfirmo Fshirjen</div>\n        </div>\n      </div>\n      <div class=\"card-body\">\n        <ul>\n          <li>Email: {{ selectedItem.email }}</li>\n          <li>Mesazhi: {{ selectedItem.message }}</li>\n        </ul>\n      </div>\n      <div class=\"card-footer\">\n        <div class=\"d-flex justify-content-center\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-danger\"\n            @click=\"deleteMessage(selectedItem._id)\"\n          >\n            <v-icon>fas fa-trash</v-icon>\n          </button>\n        </div>\n      </div>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  computed: {\n    ...mapGetters({ messages: \"messages\", isLoading: \"isLoading\" }),\n  },\n  data() {\n    return {\n      selectedItem: {},\n      showConfirmation: false,\n      headers: [\n        { text: \"Emri\", value: \"name\" },\n        { text: \"Email\", value: \"email\" },\n        { text: \"Telefoni\", value: \"phone\" },\n        { text: \"Mesazhi\", value: \"message\", width: \"45%\" },\n        { text: \"Data\", value: \"date\" },\n        { text: \"Veprimi\", value: \"action\" },\n      ],\n    };\n  },\n  name: \"Messages\",\n  methods: {\n    showDeleteModal(item) {\n      console.log(\"clicked\");\n      this.selectedItem = item;\n      this.showConfirmation = true;\n      console.log(item);\n    },\n    refresh: function() {\n      this.$store.dispatch(\"getMessages\");\n    },\n    deleteMessage(id) {\n      this.$store.dispatch(\"deleteMessage\", id).then((value) => {\n        this.showConfirmation = false;\n        this.selectedItem = false;\n      });\n    },\n  },\n  created() {\n    this.$store.dispatch(\"setLoading\", true);\n    this.$store.dispatch(\"getMessages\").then((value) => {\n      this.$store.commit(\"setLoading\", false);\n    });\n  },\n};\n</script>\n\n<style scoped>\n.v-icon:hover {\n  color: blue;\n}\n</style>\n"]}]}