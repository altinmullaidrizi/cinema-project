{"remainingRequest":"/Users/altin/WebstormProjects/Cinema2/cinemarine/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/altin/WebstormProjects/Cinema2/cinemarine/node_modules/vuetify-loader/lib/loader.js??ref--17-0!/Users/altin/WebstormProjects/Cinema2/cinemarine/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/altin/WebstormProjects/Cinema2/cinemarine/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/altin/WebstormProjects/Cinema2/cinemarine/src/views/shared/HeaderComponent.vue?vue&type=template&id=1e34e280&","dependencies":[{"path":"/Users/altin/WebstormProjects/Cinema2/cinemarine/src/views/shared/HeaderComponent.vue","mtime":1615920797367},{"path":"/Users/altin/WebstormProjects/Cinema2/cinemarine/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/altin/WebstormProjects/Cinema2/cinemarine/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/altin/WebstormProjects/Cinema2/cinemarine/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/altin/WebstormProjects/Cinema2/cinemarine/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/altin/WebstormProjects/Cinema2/cinemarine/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}